{"version":3,"file":"index.esm.js","sources":["../src/utils/otpManager.js","../src/components/InputPage.jsx","../src/utils/transform.js","../src/components/QRCodeCanvas.jsx","../src/components/QRCodePage.jsx","../src/components/SuccessPage.jsx","../src/theme/theme.js","../src/components/OTPflow.jsx"],"sourcesContent":["class SecureOTPManager {\r\n  constructor() {\r\n    this.otpData = null;\r\n    this.type1 = 0;\r\n    this.generatedAt = null;\r\n    this.attempts = 0;\r\n    this.maxAttempts = 3;\r\n    this.expiryMinutes = 5;\r\n  }\r\n\r\n  generateOTP(digitString, type1) {\r\n    // Decode type1\r\n    let v = type1;\r\n    const getType = v % 10;\r\n    v = Math.floor(v / 10);\r\n    const formatType = v % 10;\r\n    v = Math.floor(v / 10);\r\n    const digits = v;\r\n  \r\n    // Step 1: Break digitString into 2-char pairs\r\n    const pairs = [];\r\n    for (let i = 0; i < digitString.length; i += 2) {\r\n      pairs.push(digitString.slice(i, i + 2));\r\n    }\r\n  \r\n    // Step 2: Reduce each pair to a single digit (digit sum reduction)\r\n    const singleDigits = pairs.map(pair => {\r\n      let sum = parseInt(pair[0]) + parseInt(pair[1]);\r\n      while (sum >= 10) {\r\n        sum = Math.floor(sum / 10) + (sum % 10);\r\n      }\r\n      return sum;\r\n    });\r\n  \r\n    // Step 3: Transformation logic (getType)\r\n    let transformedDigits = [];\r\n  \r\n    switch (getType) {\r\n      case 0: {\r\n        let reversed = singleDigits.slice().reverse();\r\n        const firstTwo = reversed.slice(0, 2);\r\n        const remaining = reversed.slice(2);\r\n        let shifted = remaining.concat(firstTwo);\r\n        if (shifted.length > 3) [shifted[1], shifted[3]] = [shifted[3], shifted[1]];\r\n        transformedDigits = shifted;\r\n        break;\r\n      }\r\n      case 1: {\r\n        const key = 'DECAF';\r\n        const keyAscii = Array.from(key).map(c => c.charCodeAt(0));\r\n        transformedDigits = singleDigits.map((digit, i) => digit & (keyAscii[i % keyAscii.length] % 10));\r\n        break;\r\n      }\r\n      case 2: {\r\n        transformedDigits = singleDigits.map(d => d >> 1);\r\n        break;\r\n      }\r\n      case 3: {\r\n        transformedDigits = singleDigits.map((d, i) => {\r\n          let product = d * singleDigits[(i + 1) % singleDigits.length];\r\n          while (product >= 10) {\r\n            product = Math.floor(product / 10) + (product % 10);\r\n          }\r\n          return product;\r\n        });\r\n        break;\r\n      }\r\n      default: {\r\n        transformedDigits = singleDigits.map((d, i) => {\r\n          let product = d * singleDigits[(i - 1 + singleDigits.length) % singleDigits.length];\r\n          while (product >= 10) {\r\n            product = Math.floor(product / 10) + (product % 10);\r\n          }\r\n          return product;\r\n        });\r\n      }\r\n    }\r\n  \r\n    // Step 4: Create digitOtp and apply Flutter-style digit length logic\r\n    let digitOtp = transformedDigits.join('');\r\n  \r\n    // Flutter-style digit adjustment\r\n    if (digits === 4) {\r\n      digitOtp = digitOtp.slice(0, -1);\r\n    } else if (digits === 6) {\r\n      const last = parseInt(digitOtp[digitOtp.length - 1]);\r\n      digitOtp += (last >> 1).toString();\r\n    } else if (digits === 7) {\r\n      const last = parseInt(digitOtp[digitOtp.length - 1]);\r\n      const s1 = last >> 1;\r\n      const s2 = s1 >> 1;\r\n      digitOtp += s1.toString() + s2.toString();\r\n    }\r\n  \r\n    // Truncate to correct length: base digits + any appended shift\r\n    digitOtp = digitOtp.slice(0, digits + (digits === 6 ? 1 : 0) + (digits === 7 ? 2 : 0));\r\n  \r\n    // Step 5: Apply format type\r\n    let finalOtp = '';\r\n  \r\n    if (formatType === 0) {\r\n      finalOtp = digitOtp;\r\n    } else if (formatType === 1) {\r\n      finalOtp = digitOtp.split('').map(d => String.fromCharCode('A'.charCodeAt(0) + parseInt(d))).join('');\r\n    } else if (formatType === 2) {\r\n      const chars = digitOtp.split('');\r\n      let formatted = '';\r\n      for (let i = 0; i < chars.length; i += 2) {\r\n        formatted += chars[i]; // digit\r\n        if (i + 1 < chars.length) {\r\n          const nextDigit = parseInt(chars[i + 1]);\r\n          formatted += String.fromCharCode('A'.charCodeAt(0) + nextDigit);\r\n        }\r\n      }\r\n      finalOtp = formatted;\r\n    } else if (formatType === 3) {\r\n      const specialChars = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')'];\r\n      const chars = digitOtp.split('');\r\n      let formatted = '';\r\n      for (let i = 0; i < chars.length; i += 3) {\r\n        if (i < chars.length) formatted += chars[i]; // digit\r\n        if (i + 1 < chars.length) {\r\n          const d = parseInt(chars[i + 1]);\r\n          formatted += String.fromCharCode('A'.charCodeAt(0) + d); // letter\r\n        }\r\n        if (i + 2 < chars.length) {\r\n          const d = parseInt(chars[i + 2]);\r\n          formatted += specialChars[d]; // special char\r\n        }\r\n      }\r\n      finalOtp = formatted;\r\n    }\r\n  \r\n    // Optional tracking\r\n    this.otpData = finalOtp;\r\n    this.generatedAt = new Date();\r\n    this.attempts = 0;\r\n\r\n    console.log(\"Final OTP:\",finalOtp);\r\n  \r\n    return finalOtp;\r\n  }\r\n\r\n\r\n  verifyOTP(inputOTP) {\r\n    if (!this.otpData) {\r\n      return { success: false, message: 'No OTP generated' };\r\n    }\r\n\r\n    if (this.attempts >= this.maxAttempts) {\r\n      this.clearOTP();\r\n      return { success: false, message: 'Maximum attempts exceeded. Please generate a new OTP.' };\r\n    }\r\n\r\n    this.attempts++;\r\n\r\n    if (this.otpData === inputOTP) {\r\n      this.clearOTP();\r\n      return { success: true, message: 'OTP verified successfully!' };\r\n    } else {\r\n      const remainingAttempts = this.maxAttempts - this.attempts;\r\n      return {\r\n        success: false,\r\n        message: `Invalid OTP. ${remainingAttempts} attempts remaining.`\r\n      };\r\n    }\r\n  }\r\n\r\n  clearOTP() {\r\n    this.otpData = null;\r\n    this.generatedAt = null;\r\n    this.attempts = 0;\r\n  }\r\n}\r\n\r\n// export const otpManager = new SecureOTPManager();\r\nexport const otpManager = new SecureOTPManager();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { otpManager } from '../utils/otpManager';\r\n\r\nconst InputPage = ({\r\n  onSubmit = () => {},\r\n  phoneNumber,\r\n  onReset =()=>{},\r\n  theme = {\r\n    primary: '#007bff',\r\n    primaryDark: '#0056b3',\r\n    text: '#333',\r\n    textSecondary: '#666',\r\n    border: '#ddd',\r\n    borderActive: '#007bff',\r\n    cardBackground: '#fff',\r\n    success: '#28a745'\r\n  },\r\n  isDark = false,\r\n  type1 = 'default'\r\n}) => {\r\n  const dynamicTheme = {\r\n    primary: theme.primary,\r\n    primaryDark: theme.primaryDark,\r\n    text: isDark ? '#ffffff' : theme.text,\r\n    textSecondary: isDark ? '#b3b3b3' : theme.textSecondary,\r\n    border: isDark ? '#404040' : theme.border,\r\n    borderActive: theme.borderActive,\r\n    cardBackground: isDark ? '#2d2d2d' : theme.cardBackground,\r\n    success: theme.success,\r\n    backgroundColor: isDark ? '#1a1a1a' : '#f0f0f0'\r\n  };\r\n\r\n  const [inputData, setInputData] = useState('');\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [verified, setVerified] = useState(false);\r\n\r\n  // Generate unique ID for this component instance to avoid CSS conflicts\r\n  const componentId = React.useRef(`otp-input-${Math.random().toString(36).substr(2, 9)}`).current;\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"otpVerified\") === \"true\";\r\n    setVerified(stored);\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const input = e.target.value;\r\n    if (/^\\d*$/.test(input) && input.length <= 10) {\r\n      setInputData(input);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const dataToSubmit = inputData || phoneNumber;\r\n    if (dataToSubmit.length === 10) {\r\n      const key = \"9D941AF69FAA5E041172D29A8B459BB4\";\r\n      otpManager.generateOTP(dataToSubmit, type1);\r\n      setShowPopup(false);\r\n      onSubmit(dataToSubmit);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && inputData.length === 10) {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setShowPopup(false);\r\n    setInputData('');\r\n  };\r\n\r\n  const handleResetVerification = () => {\r\n    setVerified(false);\r\n    localStorage.removeItem(\"otpVerified\");\r\n    onReset();\r\n  };\r\n\r\n  // Scoped styles using the unique component ID\r\n  const styles = `\r\n    .${componentId}-button-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      gap: 16px;\r\n      padding: 20px;\r\n      background-color: ${dynamicTheme.backgroundColor};\r\n      border-radius: 12px;\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n      max-width: 400px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .${componentId}-auth-button {\r\n      padding: 16px 32px;\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n      background-color: ${verified ? theme.success : dynamicTheme.primary};\r\n      color: white;\r\n      border: none;\r\n      border-radius: 12px;\r\n      cursor: ${verified ? 'not-allowed' : 'pointer'};\r\n      box-shadow: 0 6px 20px ${verified ? theme.success : dynamicTheme.primary}40;\r\n      transition: all 0.3s ease;\r\n      opacity: ${verified ? '0.8' : '1'};\r\n    }\r\n\r\n    .${componentId}-auth-button:hover:enabled {\r\n      background-color: ${theme.primaryDark};\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 8px 24px ${theme.primary}50;\r\n    }\r\n\r\n    .${componentId}-auth-button:disabled {\r\n      transform: none;\r\n      cursor: not-allowed;\r\n    }\r\n\r\n    .${componentId}-reset-button {\r\n      padding: 8px 16px;\r\n      font-size: 14px;\r\n      background-color: transparent;\r\n      color: ${dynamicTheme.textSecondary};\r\n      border: 1px solid ${dynamicTheme.border};\r\n      border-radius: 8px;\r\n      cursor: pointer;\r\n      transition: all 0.2s ease;\r\n    }\r\n\r\n    .${componentId}-reset-button:hover {\r\n      background-color: ${dynamicTheme.border};\r\n      color: ${dynamicTheme.text};\r\n    }\r\n\r\n    .${componentId}-popup-overlay {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100vw;\r\n      height: 100vh;\r\n      background-color: rgba(0, 0, 0, 0.4);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      z-index: 999999;\r\n    }\r\n\r\n    .${componentId}-popup-content {\r\n      background-color: ${isDark ? '#1e1e1e' : '#ffffff'};\r\n      border-radius: 16px;\r\n      padding: 48px 32px;\r\n      box-shadow: 0 12px 32px rgba(0, 0, 0, 0.25);\r\n      max-width: 90%;\r\n      width: 400px;\r\n      text-align: center;\r\n      position: relative;\r\n    }\r\n\r\n    .${componentId}-close-button {\r\n      position: absolute;\r\n      top: 16px;\r\n      right: 16px;\r\n      width: 32px;\r\n      height: 32px;\r\n      border-radius: 50%;\r\n      border: none;\r\n      background-color: transparent;\r\n      color: ${dynamicTheme.textSecondary};\r\n      cursor: pointer;\r\n      font-size: 18px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: all 0.2s ease;\r\n    }\r\n\r\n    .${componentId}-close-button:hover {\r\n      background-color: ${dynamicTheme.border};\r\n    }\r\n\r\n    .${componentId}-popup-header {\r\n      margin-bottom: 32px;\r\n    }\r\n\r\n    .${componentId}-icon-container {\r\n      width: 64px;\r\n      height: 64px;\r\n      background-color: ${theme.primary};\r\n      border-radius: 16px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin: 0 auto 24px auto;\r\n      box-shadow: 0 8px 24px ${theme.primary}40;\r\n    }\r\n\r\n    .${componentId}-icon {\r\n      color: white;\r\n      font-size: 28px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .${componentId}-title {\r\n      color: ${dynamicTheme.text};\r\n      font-size: 28px;\r\n      font-weight: 700;\r\n      margin: 0 0 8px 0;\r\n      letter-spacing: -0.5px;\r\n    }\r\n\r\n    .${componentId}-subtitle {\r\n      color: ${dynamicTheme.textSecondary};\r\n      font-size: 16px;\r\n      margin: 0;\r\n      line-height: 1.5;\r\n    }\r\n\r\n    .${componentId}-input-section {\r\n      margin-bottom: 32px;\r\n    }\r\n\r\n    .${componentId}-digit-input {\r\n      width: 100%;\r\n      max-width: 300px;\r\n      padding: 16px 20px;\r\n      font-size: 18px;\r\n      border: 2px solid ${inputData ? theme.borderActive : theme.border};\r\n      border-radius: 12px;\r\n      text-align: center;\r\n      background: ${theme.cardBackground};\r\n      color: ${theme.text};\r\n      outline: none;\r\n      letter-spacing: 2px;\r\n      font-weight: 500;\r\n      box-sizing: border-box;\r\n    }\r\n\r\n    .${componentId}-input-status {\r\n      margin-top: 12px;\r\n      font-size: 14px;\r\n      color: ${dynamicTheme.textSecondary};\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    .${componentId}-status-dot {\r\n      width: 8px;\r\n      height: 8px;\r\n      border-radius: 50%;\r\n      background-color: ${dynamicTheme.border};\r\n    }\r\n\r\n    .${componentId}-status-dot.complete {\r\n      background-color: ${dynamicTheme.success};\r\n    }\r\n\r\n    .${componentId}-submit-button {\r\n      width: 100%;\r\n      max-width: 300px;\r\n      padding: 16px 24px;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      border: none;\r\n      border-radius: 12px;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .${componentId}-submit-button.enabled {\r\n      background-color: ${theme.primary};\r\n      color: white;\r\n      box-shadow: 0 4px 12px ${theme.primary}40;\r\n    }\r\n\r\n    .${componentId}-submit-button.enabled:hover {\r\n      background-color: ${theme.primaryDark};\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 8px 24px ${theme.primary}50;\r\n    }\r\n\r\n    .${componentId}-submit-button.disabled {\r\n      background-color: ${dynamicTheme.textSecondary};\r\n      color: white;\r\n      cursor: not-allowed;\r\n      transform: scale(0.98);\r\n    }\r\n  `;\r\n\r\n  // ✅ Initial Authenticate Button Screen\r\n  if (!showPopup) {\r\n    return (\r\n      <div className={`${componentId}-button-container`}>\r\n        <button\r\n           onClick={() => {\r\n            if (phoneNumber !== \"0000000000\") {\r\n              setInputData(phoneNumber);\r\n              handleSubmit(); // This will use the phoneNumber directly\r\n            } else {\r\n              setShowPopup(true);\r\n            }\r\n          }}\r\n          className={`${componentId}-auth-button`}\r\n          disabled={verified}\r\n        >\r\n          {verified ? '✓ Already Authenticated' : 'Authenticate OTP'}\r\n        </button>\r\n        \r\n        {verified && (\r\n          <button\r\n            onClick={handleResetVerification}\r\n            className={`${componentId}-reset-button`}\r\n          >\r\n            Reset Authentication\r\n          </button>\r\n        )}\r\n\r\n        <style>{styles}</style>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ✅ OTP Input Popup\r\n  return (\r\n    <div className={`${componentId}-popup-overlay`}>\r\n      <div className={`${componentId}-popup-content`}>\r\n        <button\r\n          onClick={handleClosePopup}\r\n          className={`${componentId}-close-button`}\r\n        >\r\n          ×\r\n        </button>\r\n\r\n        <div className={`${componentId}-popup-header`}>\r\n          <div className={`${componentId}-icon-container`}>\r\n            <span className={`${componentId}-icon`}>🔐</span>\r\n          </div>\r\n          <h1 className={`${componentId}-title`}>Secure Authentication</h1>\r\n          <p className={`${componentId}-subtitle`}>Enter your 10-digit number to generate a secure OTP</p>\r\n        </div>\r\n\r\n        <div className={`${componentId}-input-section`}>\r\n          <input\r\n            type=\"text\"\r\n            value={inputData}\r\n            onChange={handleInputChange}\r\n            onKeyPress={handleKeyPress}\r\n            maxLength={10}\r\n            placeholder=\"Enter 10 digits\"\r\n            className={`${componentId}-digit-input`}\r\n          />\r\n          <div className={`${componentId}-input-status`}>\r\n            <div className={`${componentId}-status-dot ${inputData.length === 10 ? 'complete' : ''}`} />\r\n            {inputData.length}/10 digits entered\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleSubmit}\r\n          disabled={inputData.length !== 10}\r\n          className={`${componentId}-submit-button ${inputData.length === 10 ? 'enabled' : 'disabled'}`}\r\n        >\r\n          Generate Secure OTP →\r\n        </button>\r\n      </div>\r\n\r\n      <style>{styles}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputPage;","import { otpManager } from './otpManager';\r\n\r\nexport const convertDigitsToAlphabets = (digitString) => {\r\n  const digitToAlphabetMap = {\r\n    '0': 'A', '1': 'B', '2': 'C', '3': 'D', '4': 'E',\r\n    '5': 'F', '6': 'G', '7': 'H', '8': 'I', '9': 'J'\r\n  };\r\n\r\n  return digitString\r\n    .split('')\r\n    .map(digit => digitToAlphabetMap[digit])\r\n    .join('');\r\n};\r\n\r\nexport const transformDigitsForQR = (digitString, type1) => {\r\n  const generateRandomDigits = () => {\r\n    return Math.floor(Math.random() * 900) + 100; // 3-digit random number\r\n  };\r\n\r\n  otpManager.type1 = type1;\r\n  console.log(\"Got 2:\",otpManager.type1);\r\n\r\n  const first3 = digitString.slice(0, 3);\r\n  const middle4 = digitString.slice(3, 7);\r\n  const last3 = digitString.slice(7, 10);\r\n\r\n  let random1 = generateRandomDigits().toString().slice(0, 2);\r\n  const random2 = generateRandomDigits().toString();\r\n\r\n  const transformedData =\r\n    last3 + otpManager.type1.toString() + middle4 + random2 + first3;\r\n    console.log(\"Transformed Data:\", transformedData);\r\n  return transformedData;\r\n};\r\n\r\nexport const completeTransformation = (digitString, type1) => {\r\n  const transformedDigits = transformDigitsForQR(digitString, type1);\r\n  const alphabetData = convertDigitsToAlphabets(transformedDigits);\r\n  return { transformedDigits, alphabetData };\r\n};","import React, { useEffect, useState } from 'react';\r\nimport QRCode from 'qrcode';\r\nimport { completeTransformation } from '../utils/transform';\r\n\r\nconst QRCodeCanvas = ({ value, size = 100, isDark = false, theme, type1 }) => {\r\n  const [qrCodeUrl, setQrCodeUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!value) return;\r\n\r\n    const { alphabetData } = completeTransformation(value, type1);\r\n\r\n    QRCode.toDataURL(alphabetData, {\r\n      width: size,\r\n      margin: 1,\r\n      color: {\r\n        dark: isDark ? '#ffffff' : '#000000',\r\n        light: isDark ? '#1e293b' : '#ffffff'\r\n      }\r\n    })\r\n    .then(setQrCodeUrl)\r\n    .catch(err => {\r\n      console.error('QR generation failed:', err);\r\n      setQrCodeUrl(null);\r\n    });\r\n  }, [value, type1]); // Only runs when `value` or `type1` changes — not after\r\n\r\n  if (!qrCodeUrl) {\r\n    return (\r\n      <div style={{\r\n        width: size,\r\n        height: size,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: theme.surface,\r\n        border: `2px solid ${theme.border}`,\r\n        borderRadius: '12px',\r\n        color: theme.textSecondary,\r\n        fontSize: '14px'\r\n      }}>\r\n        Loading QR...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      padding: '16px',\r\n      backgroundColor: theme.cardBackground,\r\n      borderRadius: '12px',\r\n      boxShadow: `0 4px 12px ${theme.shadow}`,\r\n      border: `1px solid ${theme.border}`,\r\n      display: 'flex',\r\n      justifyContent: 'center'\r\n    }}>\r\n      <img\r\n        src={qrCodeUrl}\r\n        alt=\"QR Code\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: '8px'\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCodeCanvas;","import React, { useEffect, useRef, useState } from 'react';\r\nimport QRCodeCanvas from './QRCodeCanvas';\r\nimport { otpManager } from '../utils/otpManager';\r\n\r\nconst QRCodePage = ({ qrData, onBack, onVerificationSuccess, theme, isDark, type1 }) => {\r\n  const [otp, setOtp] = useState('');\r\n  const [verificationMessage, setVerificationMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const timerRef = useRef(null);\r\n\r\n  // Helper to extract digits and formatType from type1\r\n  const parseType1 = (type1) => {\r\n    let v = type1;\r\n    const logicType = v % 10;\r\n    v = Math.floor(v / 10);\r\n    const formatType = v % 10; // 0=numeric, 1=alpha, 2=alphanumeric, 3=complex\r\n    v = Math.floor(v / 10);\r\n    const digits = v;\r\n    return { digits, formatType, logicType };\r\n  };\r\n\r\n  const { digits: expectedLength, formatType } = parseType1(type1);\r\n\r\n  useEffect(() => {\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(timerRef.current);\r\n          setVerificationMessage('⏱️ OTP expired. Please go back and generate a new one.');\r\n          setMessageType('error');\r\n          setTimeout(onBack, 3000);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timerRef.current);\r\n  }, []);\r\n\r\n  const handleOtpChange = (e) => {\r\n    const input = e.target.value;\r\n    // Convert only lowercase letters to uppercase\r\n    const converted = input.replace(/[a-z]/g, (char) => char.toUpperCase());\r\n\r\n    if (converted.length <= expectedLength) {\r\n      setOtp(converted);\r\n      setVerificationMessage('');\r\n    }\r\n  };\r\n\r\n  const handleOtpSubmit = () => {\r\n    if (otp.length >= expectedLength) {\r\n      const result = otpManager.verifyOTP(otp);\r\n      if (result.success) {\r\n        setVerificationMessage(result.message);\r\n        setMessageType('success');\r\n        setTimeout(onVerificationSuccess, 2000);\r\n      } else {\r\n        setVerificationMessage(result.message);\r\n        setMessageType('error');\r\n        if (result.message.includes('Maximum attempts') || result.message.includes('expired')) {\r\n          setTimeout(onBack, 3000);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && otp.length >= expectedLength) {\r\n      handleOtpSubmit();\r\n    }\r\n  };\r\n\r\n  const getMessageColor = () => {\r\n    switch (messageType) {\r\n      case 'success': return theme.success;\r\n      case 'error': return theme.danger;\r\n      case 'warning': return theme.warning;\r\n      default: return theme.textSecondary;\r\n    }\r\n  };\r\n\r\n  const getFormatLabel = () => {\r\n    switch (formatType) {\r\n      case 0: return 'Numeric (e.g. 12345)';\r\n      case 1: return 'Alphabetic (A–J)';\r\n      case 2: return 'Alphanumeric (e.g. a1b2)';\r\n      case 3: return 'Complex (e.g. a!b@)';\r\n      default: return 'Unknown Format';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100vw',\r\n      height: '100vh',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 1000,\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: isDark ? '#1e1e1e' : '#ffffff',\r\n        borderRadius: '16px',\r\n        padding: '48px 32px',\r\n        boxShadow: '0 12px 32px rgba(0, 0, 0, 0.25)',\r\n        maxWidth: '90%',\r\n        width: '480px',\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        maxHeight: '90vh',\r\n        overflowY: 'auto'\r\n      }}>\r\n        <button\r\n          onClick={onBack}\r\n          style={{\r\n            position: 'absolute',\r\n            top: '16px',\r\n            right: '16px',\r\n            width: '32px',\r\n            height: '32px',\r\n            borderRadius: '50%',\r\n            border: 'none',\r\n            backgroundColor: 'transparent',\r\n            color: theme.textSecondary,\r\n            cursor: 'pointer',\r\n            fontSize: '18px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transition: 'all 0.2s ease',\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            e.target.style.backgroundColor = theme.border;\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            e.target.style.backgroundColor = 'transparent';\r\n          }}\r\n        >\r\n          ×\r\n        </button>\r\n\r\n        <div style={{ marginBottom: '32px' }}>\r\n          <h1 style={{\r\n            color: theme.text,\r\n            fontSize: '24px',\r\n            fontWeight: '700',\r\n            marginBottom: '8px',\r\n            letterSpacing: '-0.5px'\r\n          }}>\r\n            Scan & Verify\r\n          </h1>\r\n          <p style={{\r\n            color: theme.textSecondary,\r\n            fontSize: '16px',\r\n            lineHeight: '1.5'\r\n          }}>\r\n            Scan the QR code and enter the OTP to continue\r\n          </p>\r\n        </div>\r\n\r\n        <div style={{ marginBottom: '32px' }}>\r\n          <QRCodeCanvas\r\n            value={qrData}\r\n            size={200}\r\n            isDark={isDark}\r\n            theme={theme}\r\n            type1={type1}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ marginBottom: '24px' }}>\r\n          <input\r\n            type=\"text\"\r\n            value={otp}\r\n            onChange={handleOtpChange}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder={`Enter OTP`}\r\n            style={{\r\n              width: '100%',\r\n              maxWidth: '280px',\r\n              padding: '16px 20px',\r\n              fontSize: '20px',\r\n              border: `2px solid ${otp ? theme.borderActive : theme.border}`,\r\n              borderRadius: '12px',\r\n              textAlign: 'center',\r\n              background: theme.cardBackground,\r\n              color: theme.text,\r\n              fontWeight: '600',\r\n              outline: 'none',\r\n              letterSpacing: formatType === 0 || formatType === 1 ? '8px' : '1px',\r\n              boxSizing: 'border-box'\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div style={{\r\n          marginBottom: '12px',\r\n          fontSize: '14px',\r\n          fontWeight: '500',\r\n          color: timeLeft > 10 ? theme.textSecondary : theme.danger\r\n        }}>\r\n          ⏳ Time left: {timeLeft} seconds\r\n        </div>\r\n\r\n        {verificationMessage && (\r\n          <div style={{\r\n            marginBottom: '24px',\r\n            padding: '16px 20px',\r\n            backgroundColor: getMessageColor() + '15',\r\n            color: getMessageColor(),\r\n            borderRadius: '12px',\r\n            fontSize: '14px',\r\n            fontWeight: '500',\r\n            border: `1px solid ${getMessageColor()}30`\r\n          }}>\r\n            {verificationMessage}\r\n          </div>\r\n        )}\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '12px', alignItems: 'center' }}>\r\n          <button\r\n            onClick={handleOtpSubmit}\r\n            disabled={otp.length < expectedLength}\r\n            style={{\r\n              width: '100%',\r\n              maxWidth: '240px',\r\n              padding: '16px 24px',\r\n              fontSize: '16px',\r\n              fontWeight: '600',\r\n              backgroundColor: otp.length >= expectedLength ? theme.success : theme.textSecondary,\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '12px',\r\n              cursor: otp.length >= expectedLength ? 'pointer' : 'not-allowed',\r\n              transition: 'all 0.3s ease',\r\n              transform: otp.length >= expectedLength ? 'none' : 'scale(0.98)',\r\n              boxShadow: otp.length >= expectedLength ? `0 4px 12px ${theme.success}40` : 'none'\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              if (otp.length >= expectedLength) {\r\n                e.target.style.backgroundColor = theme.successDark;\r\n                e.target.style.transform = 'translateY(-2px)';\r\n                e.target.style.boxShadow = `0 8px 24px ${theme.success}50`;\r\n              }\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              if (otp.length >= expectedLength) {\r\n                e.target.style.backgroundColor = theme.success;\r\n                e.target.style.transform = 'none';\r\n                e.target.style.boxShadow = `0 4px 12px ${theme.success}40`;\r\n              }\r\n            }}\r\n          >\r\n            ✓ Verify OTP\r\n          </button>\r\n\r\n          <button\r\n            onClick={onBack}\r\n            style={{\r\n              padding: '12px 20px',\r\n              fontSize: '14px',\r\n              backgroundColor: 'transparent',\r\n              color: theme.textSecondary,\r\n              border: `1px solid ${theme.border}`,\r\n              borderRadius: '8px',\r\n              cursor: 'pointer',\r\n              fontWeight: '500'\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              e.target.style.backgroundColor = theme.surface;\r\n              e.target.style.color = theme.text;\r\n              e.target.style.borderColor = theme.borderActive;\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              e.target.style.backgroundColor = 'transparent';\r\n              e.target.style.color = theme.textSecondary;\r\n              e.target.style.borderColor = theme.border;\r\n            }}\r\n          >\r\n            ← Back to Input\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCodePage;","import React from 'react';\r\n\r\nconst SuccessPage = ({ onComplete = () => {}, theme = {}, onRestart }) => {\r\n  const handleCompleteClick = () => {\r\n    console.log(\"✅ Authentication completed successfully\");\r\n    // Mark as verified and close all popups\r\n    if (typeof onComplete === \"function\") {\r\n      onComplete(true);\r\n    }\r\n    // Also call onRestart if available (for OTPFlow component)\r\n    if (typeof onRestart === \"function\") {\r\n      onRestart();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100vw',\r\n      height: '100vh',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 1000,\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: theme.cardBackground || '#fff',\r\n        borderRadius: '16px',\r\n        padding: '48px 32px',\r\n        boxShadow: '0 12px 32px rgba(0,0,0,0.25)',\r\n        textAlign: 'center',\r\n        width: '400px',\r\n        maxWidth: '90%',\r\n      }}>\r\n        <div style={{\r\n          width: '80px',\r\n          height: '80px',\r\n          backgroundColor: theme.success || '#28a745',\r\n          borderRadius: '50%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          margin: '0 auto 32px auto',\r\n          boxShadow: `0 8px 24px ${(theme.success || '#28a745')}40`,\r\n        }}>\r\n          <span style={{ color: 'white', fontSize: '36px' }}>✓</span>\r\n        </div>\r\n\r\n        <h1 style={{\r\n          color: theme.text || '#000',\r\n          fontSize: '28px',\r\n          fontWeight: '700',\r\n          margin: '0 0 12px 0',\r\n          letterSpacing: '-0.5px',\r\n        }}>\r\n          Verification Complete!\r\n        </h1>\r\n\r\n        <p style={{\r\n          color: theme.textSecondary || '#444',\r\n          fontSize: '16px',\r\n          margin: '0 0 32px',\r\n          lineHeight: '1.5',\r\n        }}>\r\n          Your OTP has been verified successfully. You can now close this window.\r\n        </p>\r\n\r\n        <button\r\n          onClick={handleCompleteClick}\r\n          style={{\r\n            padding: '16px 32px',\r\n            backgroundColor: theme.primary || '#007bff',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '12px',\r\n            fontWeight: '600',\r\n            fontSize: '16px',\r\n            cursor: 'pointer',\r\n            transition: 'all 0.3s ease',\r\n            boxShadow: `0 4px 12px ${(theme.primary || '#007bff')}40`,\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            e.target.style.backgroundColor = theme.primaryDark || '#0056b3';\r\n            e.target.style.transform = 'translateY(-2px)';\r\n            e.target.style.boxShadow = `0 8px 24px ${(theme.primary || '#007bff')}50`;\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            e.target.style.backgroundColor = theme.primary || '#007bff';\r\n            e.target.style.transform = 'none';\r\n            e.target.style.boxShadow = `0 4px 12px ${(theme.primary || '#007bff')}40`;\r\n          }}\r\n        >\r\n          Complete Authentication\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessPage;","export const lightTheme = {\r\n  primary: '#528ff0',\r\n  primaryDark: '#3b7dd8',\r\n  secondary: '#7c3aed',\r\n  success: '#22c55e',\r\n  successDark: '#16a34a',\r\n  warning: '#f59e0b',\r\n  danger: '#ef4444',\r\n  background: '#f8fafc',\r\n  cardBackground: '#ffffff',\r\n  surface: '#f1f5f9',\r\n  text: '#1e293b',\r\n  textSecondary: '#64748b',\r\n  border: '#e2e8f0',\r\n  borderActive: '#528ff0',\r\n  shadow: 'rgba(15, 23, 42, 0.08)'\r\n};\r\n\r\nexport const darkTheme = {\r\n  primary: '#528ff0',\r\n  primaryDark: '#3b7dd8',\r\n  secondary: '#7c3aed',\r\n  success: '#22c55e',\r\n  successDark: '#16a34a',\r\n  warning: '#f59e0b',\r\n  danger: '#ef4444',\r\n  background: '#0f172a',\r\n  cardBackground: '#1e293b',\r\n  surface: '#334155',\r\n  text: '#f1f5f9',\r\n  textSecondary: '#94a3b8',\r\n  border: '#334155',\r\n  borderActive: '#528ff0',\r\n  shadow: 'rgba(0, 0, 0, 0.25)'\r\n};\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport InputPage from './InputPage';\r\nimport QRCodePage from './QRCodePage';\r\nimport SuccessPage from './SuccessPage';\r\nimport { lightTheme, darkTheme } from '../theme/theme';\r\nimport { otpManager } from '../utils/otpManager';\r\n\r\nconst OTPFlow = ({ \r\n  secretKey, \r\n  apiEndpoint = 'http://localhost:3002/api/check-otp-availability',\r\n  onError,\r\n  onSuccess,\r\n  initialTheme = 'light',\r\n  customTheme,\r\n  containerStyle = {},\r\n  onComplete,\r\n  phoneNumber=\"0000000000\",\r\n  ...props \r\n}) => {\r\n  const [currentPage, setCurrentPage] = useState('input');\r\n  const [submittedData, setSubmittedData] = useState('');\r\n  const [isDarkTheme, setIsDarkTheme] = useState(initialTheme === 'dark');\r\n  const [otpType, setOtpType] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const currentTheme = customTheme || (isDarkTheme ? darkTheme : lightTheme);\r\n\r\n  // ✅ API Call Logic extracted into reusable function\r\n  const fetchOTPConfig = useCallback(async () => {\r\n    if (!secretKey) {\r\n      const errorMsg = 'Secret key is required';\r\n      setError(errorMsg);\r\n      onError?.(errorMsg);\r\n      onComplete?.({ stage: 'error', error: errorMsg });\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(apiEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ secretKey })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        const otpTypeDetails = {\r\n          otpType: result.data.otpType,\r\n          otpDigits: result.data.otpDigits,\r\n          remainingRequests: result.data.remainingRequests,\r\n          canGenerateOTP: result.data.canGenerateOTP\r\n        };\r\n\r\n        const type = result.data.otpType;\r\n        const digits = otpTypeDetails.otpDigits;\r\n        let formatCode = 0;\r\n\r\n        if (type === 'numeric') formatCode = 1;\r\n        else if (type === 'alphanumeric') formatCode = 2;\r\n        else if (type === 'complex') formatCode = 3;\r\n\r\n        const logicCode = Math.floor(Math.random() * 5);\r\n        const finalType = digits * 100 + formatCode * 10 + logicCode;\r\n\r\n        console.log('OTP Config → digits:', digits, 'format:', formatCode, 'logic:', logicCode, '→ type:', finalType);\r\n        setOtpType(finalType);\r\n      } else {\r\n        let errorMsg = 'An error occurred';\r\n\r\n        if (response.status === 400 && result.message === 'OTP request limit exhausted') {\r\n          errorMsg = 'OTP request limit has been exhausted. Please contact support.';\r\n        } else if (response.status === 404) {\r\n          errorMsg = 'Invalid authentication key. Please check your configuration.';\r\n        } else if (response.status === 403) {\r\n          errorMsg = 'User account is inactive. Please contact support.';\r\n        } else {\r\n          errorMsg = result.message || 'An error occurred';\r\n        }\r\n\r\n        setError(errorMsg);\r\n        onError?.(errorMsg);\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error:', error);\r\n      const errorMsg = 'Network error occurred. Please try again.';\r\n      setError(errorMsg);\r\n      onError?.(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [secretKey, apiEndpoint, onError]);\r\n\r\n  // ✅ Initial Load\r\n  useEffect(() => {\r\n    fetchOTPConfig();\r\n  }, [fetchOTPConfig]);\r\n\r\n  const handleSubmit = (data) => {\r\n    setSubmittedData(data);\r\n    setCurrentPage('qr');\r\n    onComplete?.({ stage: 'submitted', mobile: data });\r\n  };\r\n  \r\n\r\n  const handleBack = () => {\r\n    setCurrentPage('input');\r\n    setSubmittedData('');\r\n    otpManager.clearOTP();\r\n  };\r\n\r\n  const handleVerificationSuccess = () => {\r\n    setCurrentPage('success');\r\n    onComplete?.({ stage: 'verified', mobile: submittedData });\r\n  };\r\n  \r\n\r\n  const handleSuccessComplete = () => {\r\n    localStorage.setItem(\"otpVerified\", \"true\");\r\n    setCurrentPage('input');\r\n    setSubmittedData('');\r\n    otpManager.clearOTP();\r\n    onSuccess?.();\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setCurrentPage('input');\r\n    setSubmittedData('');\r\n    otpManager.clearOTP();\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkTheme(!isDarkTheme);\r\n  };\r\n\r\n  const defaultContainerStyle = {\r\n    width: '100%',\r\n    maxWidth: '480px',\r\n    backgroundColor: currentTheme.cardBackground,\r\n    borderRadius: '20px',\r\n    boxShadow: `0 20px 40px ${currentTheme.shadow}`,\r\n    border: `1px solid ${currentTheme.border}`,\r\n    overflow: 'hidden',\r\n    transition: 'all 0.3s ease'\r\n  };\r\n\r\n  const finalContainerStyle = {\r\n    ...defaultContainerStyle,\r\n    ...containerStyle\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div style={finalContainerStyle}>\r\n        <div style={{ \r\n          padding: '40px', \r\n          textAlign: 'center', \r\n          color: currentTheme.textPrimary \r\n        }}>\r\n          <div>Loading...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={finalContainerStyle}>\r\n        <div style={{ \r\n          padding: '40px', \r\n          textAlign: 'center', \r\n          color: currentTheme.error || '#ff4444' \r\n        }}>\r\n          <div>Error: {error}</div>\r\n          <button \r\n            onClick={() => window.location.reload()} \r\n            style={{\r\n              marginTop: '20px',\r\n              padding: '10px 20px',\r\n              backgroundColor: currentTheme.primary,\r\n              color: currentTheme.textPrimary,\r\n              border: 'none',\r\n              borderRadius: '8px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={finalContainerStyle} {...props}>\r\n      {currentPage === 'input' &&  (\r\n        <InputPage\r\n          onSubmit={handleSubmit}\r\n          theme={currentTheme}\r\n          isDark={isDarkTheme}\r\n          type1={otpType}\r\n          onToggleTheme={toggleTheme}\r\n          phoneNumber={phoneNumber}\r\n          onReset={fetchOTPConfig} // ✅ This triggers the API call again\r\n        />\r\n      )}\r\n      {currentPage === 'qr' && (\r\n        <QRCodePage\r\n          qrData={submittedData}\r\n          onBack={handleBack}\r\n          onVerificationSuccess={handleVerificationSuccess}\r\n          theme={currentTheme}\r\n          isDark={isDarkTheme}\r\n          type1={otpType}\r\n        />\r\n      )}\r\n      {currentPage === 'success' && (\r\n        <SuccessPage\r\n          onRestart={handleRestart}\r\n          theme={currentTheme}\r\n          onComplete={handleSuccessComplete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPFlow;"],"names":["otpManager","constructor","this","otpData","type1","generatedAt","attempts","maxAttempts","expiryMinutes","generateOTP","digitString","v","getType","Math","floor","formatType","digits","pairs","i","length","push","slice","singleDigits","map","pair","sum","parseInt","transformedDigits","reversed","reverse","firstTwo","shifted","concat","key","keyAscii","Array","from","c","charCodeAt","digit","d","product","digitOtp","join","toString","s1","s2","finalOtp","split","String","fromCharCode","chars","formatted","nextDigit","specialChars","Date","console","log","verifyOTP","inputOTP","success","message","clearOTP","InputPage","onSubmit","phoneNumber","onReset","theme","primary","primaryDark","text","textSecondary","border","borderActive","cardBackground","isDark","dynamicTheme","inputData","setInputData","useState","showPopup","setShowPopup","verified","setVerified","componentId","React","useRef","random","substr","current","useEffect","stored","localStorage","getItem","handleSubmit","dataToSubmit","handleResetVerification","removeItem","styles","createElement","className","onClick","handleClosePopup","type","value","onChange","e","input","target","test","onKeyPress","maxLength","placeholder","disabled","completeTransformation","transformDigitsForQR","generateRandomDigits","first3","middle4","last3","random2","transformedData","alphabetData","digitToAlphabetMap","convertDigitsToAlphabets","QRCodeCanvas","size","qrCodeUrl","setQrCodeUrl","QRCode","toDataURL","width","margin","color","dark","light","then","catch","err","error","style","padding","backgroundColor","borderRadius","boxShadow","shadow","display","justifyContent","src","alt","height","alignItems","surface","fontSize","QRCodePage","qrData","onBack","onVerificationSuccess","otp","setOtp","verificationMessage","setVerificationMessage","messageType","setMessageType","timeLeft","setTimeLeft","timerRef","expectedLength","logicType","parseType1","setInterval","prev","clearInterval","setTimeout","handleOtpSubmit","result","includes","getMessageColor","danger","warning","position","top","left","zIndex","maxWidth","textAlign","maxHeight","overflowY","right","cursor","transition","onMouseEnter","onMouseLeave","marginBottom","fontWeight","letterSpacing","lineHeight","converted","replace","char","toUpperCase","background","outline","boxSizing","flexDirection","gap","transform","successDark","borderColor","SuccessPage","onComplete","onRestart","handleCompleteClick","lightTheme","secondary","darkTheme","OTPFlow","secretKey","apiEndpoint","onError","onSuccess","initialTheme","customTheme","containerStyle","props","currentPage","setCurrentPage","submittedData","setSubmittedData","isDarkTheme","setIsDarkTheme","otpType","setOtpType","isLoading","setIsLoading","setError","currentTheme","fetchOTPConfig","useCallback","async","errorMsg","stage","response","fetch","method","headers","body","JSON","stringify","json","otpTypeDetails","data","otpDigits","remainingRequests","canGenerateOTP","formatCode","logicCode","finalType","status","finalContainerStyle","overflow","textPrimary","window","location","reload","marginTop","_extends","mobile","onToggleTheme","toggleTheme","handleBack","handleVerificationSuccess","handleRestart","handleSuccessComplete","setItem"],"mappings":"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"}